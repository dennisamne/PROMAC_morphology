---
title: "edgeR_KO"
author: "Dennis Amnebrink"
affiliation-title: "Linnaeus University"
title-block-banner: true
date: now
editor: visual
toc: true
prefer-html: true
number-sections: true
format:
  html:
     code-fold: true
     self-contained: true
---

```{r}
SIGNIFICANCE = 0.05
MIN_COUNT = 15
MIN_SAMPLE = 2
```

```{r}
GEOM_COL_COLOURS = c(
  RColorBrewer::brewer.pal(12, name = 'Paired'))

GEOM_COL_COLOURS1 = c(GEOM_COL_COLOURS, "#D3D3D3")

TREAT_COLOURS <- c("blue","yellow4")
```

```{r}
#| label: libraries
#| warning: false
library(tidyverse)
library(data.table)
library(edgeR)
library(kableExtra)
library(viridis)
library(patchwork)
library(ggbreak)
library(DT)
```

```{r}
#| label: file-loading
#| warning: false
#| cache: true
#File to connect NGI ID with our own classification ID, add the Âµ-values to this file for testing later, or do that in a sep file?
sample_ID <- read_tsv("../data/J.Pinhassi_21_02_sample_info.txt") %>%
  dplyr::select(1:2) %>%
  dplyr::rename(sample = 1, sample_name = 2) %>%
  mutate(sample_name = str_replace(sample_name, "[0-9]*:","")) %>%
  separate(sample_name, c("treatment","timepoint"), sep = ",") %>%
  mutate(treatment = gsub("NT","TN", treatment)) %>%
  mutate(sample_name = paste(timepoint, treatment, sep = "_")) %>%
  separate(treatment, c("treatment","replicate"), sep = -1) %>%
  mutate(tre_rep = gsub("_","", sample_name)) %>%
  mutate(tre_rep = toupper(tre_rep)) %>%
  mutate(day = case_when( timepoint == "t3" ~ 10,
                          TRUE ~ 17
                          )
         )

target_genes <- read_tsv("../data/list_of_genes.tsv") 

#Reading in annotations
eggnogs <- read_tsv("../data2/all_samples.emapper.annotations.tsv", comment = "#")  %>%
  rename(orf = "query") 

  

#Reading in taxonomic annotation of reads
taxonomy <- read_tsv("../data2/out.CAT.contig2classification.names.txt.gz") %>%
  rename(chr = "# contig") %>%
  mutate(superkingdom = gsub(":.*","",superkingdom),
         phylum = gsub(":.*","",phylum),
         class = gsub(":.*","",class),
         order = gsub(":.*","",order),
         family = gsub(":.*","",family),
         genus = gsub(":.*","",genus),
         species = gsub(":.*","",species),
         )


#Count file for all orfs, tpm is calculated per sample
bbmap <- fread("../data2/counts.tsv.gz", sep = "\t") %>%
              filter(count > 0)    %>%                           # removing 0 counts to reduce size of table
              mutate(sample = str_extract(sample, "P[0-9]*_[0-9]*")) #Removing trailing sample information

rm_values <- read_tsv("../data/Rm_values.tsv")

gene_categories <- read_tsv("../data/gene_categories.tsv")

kofamscan <- fread("../data2/kofamscan2.tsv.gz", sep = "\t" ) %>%
rename(orf = "gene name",
       KEGG_ko = "KO",
       evalue = 6) %>%
  filter(evalue < 1e-5) %>%
  group_by(orf) %>%
  slice_max(order_by = score, n = 1) %>%
  ungroup() %>%
  group_by(orf) %>% #This group_by selects best hit of all KO's based on evalue (only if similar bitscore)
  slice_min(order_by = evalue, n = 1) %>%
  ungroup() %>%
  group_by(orf) %>% #This group_by selects best hit of all KO's based on treshold (only if similar bitscore)
  slice(1) %>% # All duplicates are now removed
  ungroup() %>%
  select(-1)

koUpLegend <- read_tsv("../data2/koTermsUpLegend.tsv", col_names = c("KEGG_ko","gene","Description")) 
  
    
   
koDownLegend <- read_tsv("../data2/koTermsDownLegend.tsv", col_names = c("KEGG_ko","gene","Description"))

cog_legend <- read_tsv("../data2/COG_categories.tsv")

#Merging up and down legend for supplementary table of up/down-genes

UpDown <- rbind(koUpLegend %>% mutate(type = "Up"),
      koDownLegend %>% mutate(type = "Down")) 
  
write_tsv(UpDown,"../results/up_down_genes.tsv")

```

```{r}
#| cache: true
#| warning: false
#Removing non-prokreads as well as recalculating tpm over prok frac.
bbmap_p <- bbmap %>% 
  semi_join(taxonomy %>% filter(superkingdom %in% c("Bacteria", "Archaea")), 
            by = "chr") %>%
  dplyr::select(-tpm) %>%
   group_by(sample) %>%
            mutate(t = count/length) %>%
            mutate(tpm = t/sum(t)*1e6) %>%
   ungroup()
```

# EdgeR- analysis

EdgeR-analysis of the day 17 TN vs C-treatment on using the KO-system [annotation](https://www.kegg.jp/).

```{r}
#| label: edgeR-analysis
#| warning: false
#| cache: true

design <- model.matrix(~ 0 + factor(c(1,1,1,2,2,2,3,3,3,4,4,4)))
colnames(design) <- c("warm_control","cold_control","cold_nutrient","warm_nutrient")

#Creating sample vector with library sizes to feed into normalization.
libSizes <- bbmap_p %>%
  group_by(orf) %>%
  filter(sum(count) >= MIN_COUNT, n() >= MIN_SAMPLE) %>%
  ungroup() %>%
  semi_join(sample_ID %>% filter(day == '17'), by = 'sample') %>%
  select(sample, orf, count) %>%
  spread(sample, count, fill = 0) %>%
  column_to_rownames("orf") %>%
  colSums() %>%
  as.vector()
  
#Creating DGElist
dgelist <- bbmap_p %>%
  group_by(orf) %>%
  filter(sum(count) >= MIN_COUNT, n() >= MIN_SAMPLE) %>%
  ungroup() %>%
  semi_join(sample_ID %>% filter(day == '17'), by = 'sample') %>%
  inner_join(kofamscan %>% select(orf, KEGG_ko), by = 'orf') %>%
  group_by(KEGG_ko, sample) %>%
  summarise(count = sum(count), .groups = 'drop') %>%
  ungroup() %>%
  pivot_wider(names_from = sample, values_from = count, values_fill = 0) %>%
  as.data.frame() %>%
  tibble::column_to_rownames('KEGG_ko') %>%
  DGEList(lib.size = libSizes) %>% #This is where the libSizes need to be specified.
  calcNormFactors() %>%
  estimateDisp(design) %>%
  glmQLFit(design, robust = TRUE)

#Creating contrasts
my.contrasts <- makeContrasts(warm_nutrientvscold_control=warm_nutrient-cold_control, levels=design)

qlf.TNvsC <- glmQLFTest(dgelist, contrast=my.contrasts[,"warm_nutrientvscold_control"])
```

```{r}
#| warning: false
#| cache: true
#| label: file_writing

day17 <- topTags(qlf.TNvsC, n = Inf) %>%
  as.data.frame() %>%
  mutate(day = "17") %>%
  rownames_to_column("KEGG_ko") %>%
  select(-FDR)

edgeR_KO <- day17 %>%
  mutate(fdr = p.adjust(PValue, method = "fdr")) %>%
  mutate(type = 
           case_when(
             (fdr <= SIGNIFICANCE & logFC > 0) ~ "Up",
             (fdr <= SIGNIFICANCE & logFC < 0) ~ "Down",
             TRUE ~"non-DE"
           )) %>%
  mutate(type = forcats::as_factor(type) %>% fct_relevel("Up","non-DE","Down"))

write_tsv(edgeR_KO, "../results/edgeR_KO.tsv")
```

```{r}
#Creating vectors for up and orfs part of the downregulated KO's.

upReg <- kofamscan %>%
  inner_join(edgeR_KO, by = "KEGG_ko") %>%
  filter(type == "Up") %>%
  pull(orf)

downReg <- kofamscan %>%
  inner_join(edgeR_KO, by = "KEGG_ko") %>%
  filter(type == "Down") %>%
  pull(orf)
```

## General results and the target genes

The analysis revealed 165 genes more abundant in the TN-treatment, and 178 more abundant in the C-treatment (@tbl-overview). As you soon will see, the amount of genes in the target gene list were so few, that they were included in the large scale analysis instead, but are still presented here for you to see. The section summarising the expression results is the section called "The rest of the DE-genes".

```{r}
#| label: tbl-overview
#| tbl-cap: "EdgeR summary of genefunctions"
#| warning: false
edgeR_KO <- read_tsv("../results/edgeR_KO.tsv")

kable(edgeR_KO %>%
  group_by(type) %>%
  tally() %>%
  ungroup() %>%
  rename("No. of genes" = "n")) %>%
  kable_styling(bootstrap_options = c("striped", "hover"))

edgeR_KO %>% 
  filter(type == "Up") %>%
  mutate(gene = paste0("gene",row_number())) %>%
  select(gene, KEGG_ko) %>%
  write_tsv("../data2/koterms_up.tsv")

edgeR_KO %>% 
  filter(type == "Down") %>%
  mutate(gene = paste0("gene",row_number())) %>%
  select(gene, KEGG_ko) %>%
  write_tsv("../data2/koterms_down.tsv")

#Trying the mapper using all information criteria

  edgeR_KO %>%
    mutate(colour = case_when(type == "Up" ~ "red",
                              type == "Down" ~ "blue",
                              TRUE ~"grey")) %>%
    select(KEGG_ko, colour) %>%
    write_tsv("../data2/kegg_mapper.tsv")
```

```{r}
#| label: fig-volcano
#| warning: false
#| eval: false
edgeR_KO %>% 
  ggplot(mapping = aes(x=logCPM, y = logFC, colour=type, size = type)) +
  geom_point()  +
  scale_size_manual(values = c("Down" = 1.5, "Up"=1.5, "non-DE" = 0.3)) +
  scale_colour_manual(values = c("Down" = "Blue","Up" = "Red", "non-DE" = "Black")) +
  theme_minimal() 
```

Among the target-gene list, only 2 genes were statistically upregulated in the TN-treatment (@tbl-Up). Thus from here we employ a different approach to identify patterns connected to morphology, summarising the overall patterns seen using the KO-terms. But first we inspect the downregulated genes below.

```{r}
#| label: tbl-Up
#| tbl-cap: "Target genes among the TN-abundant genes, and their classification."
#| warning: false

#Upload the target gene lists into kegg and get annotation that way.
#Identifying target genes in the positive DE-expressed genes
kable(edgeR_KO %>%
  filter(type == "Up") %>%
  inner_join(koUpLegend %>% separate_rows(gene, sep = ","), by = "KEGG_ko") %>% # Removing several gene-namesin one row
  inner_join(target_genes, by = "gene")
 ) %>%
   kable_styling(bootstrap_options = c("striped", "hover"))
```

The genes abundant in the C-treatment included 6 genes from the target gene list (@tbl-Down). Three of these were osmoregulatory genes involed in betaine/proline transport, and a membrane porin.

```{r}
#| label: tbl-Down
#| tbl-cap: "Target genes among the C-abundant genes, and their classification."
#| warning: false

#Identifying target genes in the negative DE-expressed genes
 kable(edgeR_KO %>%
  filter(type == "Down") %>%
  inner_join(koDownLegend %>% separate_rows(gene, sep = ","), by = "KEGG_ko") %>% # Removing several gene-namesin one row
  inner_join(target_genes, by = "gene")
 ) %>%
   kable_styling(bootstrap_options = c("striped", "hover"))
```

## The rest of the DE-genes

### Calculating tpm of DE-genes in respective treatment
```{r}

#Calculating tpm in C treatment for C-abundant genes
bbmap_p %>%
  inner_join(sample_ID %>% filter(day == "17"), by = "sample") %>% # Selecting relevant day
  filter(treatment %in% c("TN","C")) %>% # Selecting relevant treatments
  group_by(orf, treatment) %>% #mean tpm regardless of treatment
  summarise(tpm = mean(tpm)) %>% # summarising mean tpm per treatment
  ungroup() %>%
  mutate(type = case_when(orf %in% upReg ~ "TN-DE", #Mutating in up/downregulation information
                          orf %in% downReg ~ "C-DE",
                          TRUE ~ "non-DE")) %>%
  filter(type == "C-DE" & treatment == "C") %>%
  group_by(treatment) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup()


#Calculating tpm in TN treatment for TN-abundant genes
bbmap_p %>%
  inner_join(sample_ID %>% filter(day == "17"), by = "sample") %>% # Selecting relevant day
  filter(treatment %in% c("TN","C")) %>% # Selecting relevant treatments
  group_by(orf, treatment) %>% #mean tpm regardless of treatment
  summarise(tpm = mean(tpm)) %>% # summarising mean tpm per treatment
  ungroup() %>%
  mutate(type = case_when(orf %in% upReg ~ "TN-DE", #Mutating in up/downregulation information
                          orf %in% downReg ~ "C-DE",
                          TRUE ~ "non-DE")) %>%
  filter(type == "TN-DE" & treatment == "TN") %>%
  group_by(treatment) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup()
```


### The differentially abundant genes

Here I employ a legend to relate the genes to the morphological charateristics

ð¢ - Gene is related to cell-cell connections and aggregation (higher in TN-treatment)

ð  - Gene is related to OMV's (Higher in TN-treatment)

#### electron-transport chain:

*ccmF*\
*ccmG*\
*coxA*\

#### Morphology genes:

[*csgB*](https://www.kegg.jp/entry/K04335) a minor curlin subunit\
**Flagellar and flagellin related genes**\
[*flaG*](https://www.kegg.jp/entry/K06603)\
[*flgB*](https://www.kegg.jp/entry/K02387)\
[flgO](https://www.kegg.jp/entry/K24344)\
[*fliC*](https://www.kegg.jp/entry/K02406)\
[*fliD*](https://www.kegg.jp/entry/K02407)\
[*pilU*](https://www.kegg.jp/entry/K02670) a twitching motility protein\
Adherence proteins in [T2SS](https://en.wikipedia.org/wiki/Type_II_secretion_system), which is coupled with quorom sensing, and not pathogenic popped up:\
[*tadB*](https://www.kegg.jp/entry/K12510) ð¢\
[*tadC*](https://www.kegg.jp/entry/K12511) ð¢\
[*tadE*](https://www.kegg.jp/entry/K12513) ð¢\
[*rpoS*](https://www.kegg.jp/entry/K03087) sigma factor involved in biofilm formation. ð¢\
[*glgA*](https://www.kegg.jp/entry/K00703) a starch synthase involved in biofilm formation. ð¢\
[*csrA*](https://www.kegg.jp/entry/K03563) a carbon storage regulator involved in biofilm formation. ð¢\
[*bifA*](https://www.kegg.jp/entry/K21024) - a phosphodiesterase involved in biofilm formation. ð¢\

#### Chemotaxis and quorom sensing:

[*mcp*](https://www.kegg.jp/entry/K03406), involved in bacterial chemotaxis ð¢\
[*ABC.SP.A*](https://www.kegg.jp/entry/K02052) - putrescine/spermedine related invoved in quorom sensing among others ð¢\

#### Multidrug resistance:

[*mexT*](https://www.kegg.jp/entry/K18297).\

#### Viral and defense genes:

[*hsdR*](https://www.kegg.jp/entry/K01153) - type1-restriction enzyme\
[*K07317*](https://www.kegg.jp/entry/K07317) - a type2 R-M system\
[*uvsW*](https://www.kegg.jp/entry/K18959) - a viral protein encoding gene\
[*gp23*](https://www.kegg.jp/entry/K21079) - phage major capsid protein\
[*gp46*](https://www.kegg.jp/entry/K26043) - phage exonuclease subunit (by virus, not defense)\
[*gp47*](https://www.kegg.jp/entry/K26048) - phage exonuclease subunit (by virus, not defense)\
[*gp55*](https://www.kegg.jp/entry/K22007) - phage poymerase sigma factor\

#### LPS and OMV's:

[*waaJ*](https://www.kegg.jp/entry/K03279) - LPS biosynthesis ð \
[*wbyK*](https://www.kegg.jp/entry/K13001) - LPS biosynthesis ð \
[*SEPT4*](https://www.kegg.jp/entry/K16943) - involved in membrane trafficking exocytosis, as well as apoptosis (but eukaryotic, homolog?) ð \

What matches our data? Well the adherence proteins I think reflects a bit what we see. **Especially the adherence proteins together with the biofilm-formation genes may explain the aggregation patterns observed in the microscopy.** An interesting note is the occurence of 5 phage genes in conjunction with two defense genes, suggesting that phage infection and defense is on-going in the TN-treatment as opposed to the C-treatment.\
\
The appearance of the flaggellin and curli-genes are in opposition to what we see in the microscopy, there are more structures of filaments in the C-treatment, however these genes appear upregulated in the TN-treatment, it might be that these genes are used in the cell-cell connections in some way, rather than moving around, but it needs confirmation that pili-genes can be involved in this rather than mobility alone.

### The C-abundant genes

Legend for maintenance associated activities

ð£ - osmoregulation

ðµ - ribosomal proteins and translation related genes

This is still a work in progress...

Here subunits of the F-type ATPase was more abundant:\
[*ATPeF0A*](https://www.kegg.jp/entry/K02126), subunit a [*ATPF0A*](https://www.kegg.jp/entry/K02108), subunit a [*ATPF0B*](https://www.kegg.jp/entry/K02109), subunit b [*ATPeF0C*](https://www.kegg.jp/entry/K02128), subunit c

one morphology gene upregulated in the C-treatment [*flgE*](https://www.kegg.jp/entry/K02390)

Genes related to proline-metabolism, known to be important for osmoregulation were upregulated in the C-treatment

[*proX*](https://www.kegg.jp/entry/K02002)ð£*\
[proW](https://www.kegg.jp/entry/K02001)* ð£\
[*ompF*](https://www.kegg.jp/entry/K09476) an outer membrane protein defined as osmoregulatory ð£

Ribosome and translation processes:

[*rplJ*](https://www.kegg.jp/entry/K02864) ðµ\

[*RPL14*](https://www.kegg.jp/entry/K02875) ðµ\

[*RPL15*](https://www.kegg.jp/entry/K02877) ðµ\

[*rplX*](https://www.kegg.jp/entry/K02895) ðµ\

[*rplC*](https://www.kegg.jp/entry/K02906) ðµ\

[*rplE*](https://www.kegg.jp/entry/K02931) ðµ\

[*rplL*](https://www.kegg.jp/entry/K02935) ðµ\

[*rpsJ*](https://www.kegg.jp/entry/K02946) ðµ\

[*rpsL*](https://www.kegg.jp/entry/K02950) ðµ\

[*rpsO*](https://www.kegg.jp/entry/K02956) ðµ\

[*rpsB*](https://www.kegg.jp/entry/K02967) ðµ\

[*rpsG*](https://www.kegg.jp/entry/K02992) ðµ\

[*EIF1A*](https://www.kegg.jp/entry/K03236) ðµ\

[*EIF4A*](https://www.kegg.jp/entry/K03257) ðµ\

[*EIF4E*](https://www.kegg.jp/entry/K03259) ðµ\

[*EIF5*](https://www.kegg.jp/entry/K03262) ðµ\

Thus we see several ribosome and translation genes statistically more abundant in the C-treatment. The pro-genes and porin are worth mentioning, but do not deserve more than a sentence as there are not so many genes involved in this pathway, perhaps if they have a large transcription in the C-treatment this will give validity.

## Summary

To recapitulate, morphological charateristics that were over-represented in the TN-treatment included Outer membrane blebbing and release of outer membrane vesicles, this was also true for the combination of connections between cells and blebbing (@fig-morphologies). The genes supporting what we see then includes the biofilm and adhesion genes that might help explain the bactteriall aggregation seen, there are allso three genes involved in LPS biosynthesis and exocytosis, which might explain the outer membrane vesicles seen in the TN-treatment. A sidenote is the presence of phage-genes being expressed, suggesting a top-down pressure by phages in the TN-treatment, and bacterial defense systems responding to this.\

Genes and systems supporting the occurrence of OMV's in the TN-treatment include :

The LPS and OMV's categories

Quorom-sensing and chemotaxis

The maintenance related activties in the C-treatment does not really get a large support, but three genes related to osmoregulation show up, and several ribosomal proteins pop-up, potentially reflecting cold adaptation.

::: {#fig-morphologies layout="[[1], [1,1]]"}
![morphSummary](../data2/morphology_summary.jpg){#fig-summary}

![morphSlides1](../data2/Microscopy_slide1.jpg){#fig-morphslide1}

![morphSlides2](../data2/morphology_slide2.jpg){#fig-morphslide2}

Morphological traits
:::

# Figures based on above genelist

```{r}
#| label: fig-DETPM
#| fig-cap: "the most abundant weighted genes in each treatment."
#| warning: false
#| eval: false
bbmap_p %>%
  inner_join(sample_ID %>% filter(day == "17"), by = "sample") %>% # Selecting relevant day
  filter(treatment %in% c("TN","C")) %>% # Selecting relevant treatments
  group_by(orf, treatment) %>%
  summarise(tpm = mean(tpm)) %>% # summarising mean tpm per treatment
  ungroup() %>%
  inner_join(kofamscan, by = "orf") %>% #Adding the kO-terms and summarising tpm per treatment and KO-term
  group_by(treatment, KEGG_ko) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  inner_join(rbind(koDownLegend, koUpLegend), by = "KEGG_ko") %>%
  mutate(gene = forcats::as_factor(gene) %>% fct_reorder(tpm, .desc = TRUE)) %>%
  group_by(treatment) %>% #Selecting top50 KO's per treatment
  arrange(desc(tpm)) %>%
  slice_head(n = 50) %>%
  ungroup() %>%
  ggplot(mapping = aes(x = gene, y = tpm)) +
  geom_col() +
  facet_wrap(~treatment, scales = "free") +
  theme(axis.text.x = element_text(hjust = 1, angle = 90)) 
```

Plotting the most relevant genes based on change\*abundance, very few are involved in any of the interesting processes (@fig-weighted).

```{r}
#| label: fig-weighted
#| fig-cap: "the most abundant weighted genes in each treatment."
#| warning: false

#Plotting the logCPM*logFC ordering version, as presented before, and adding annotation based on what activities the bugs are involved in
#Adding annotation of known processes among the known genes


edgeR_KO %>%
  mutate(weighted = logFC*logCPM) %>%
  inner_join(rbind(koDownLegend, koUpLegend), by = "KEGG_ko") %>% #Adding known annotations
  arrange(desc(weighted)) %>%
  slice(1:50, (nrow(.)-49):nrow(.)) %>% #selecting largest and lowest weighted values respectively
  ungroup() %>% view()
  
```

On the other hand we can see the distribution of the specified processes by plotting only the genes in processes of interest (@fig-process_weighted).

```{r}
#| label: fig-process_weighted
#| fig-cap: "The abundance and change of the genes involved in relevant processes"
#| warning: false

aggregationGenes <- c("tadB","tadC","tadE","rpoS","glgA","csrA","bifA","mcp","ABC.SP.A") #Green colour

LPSOMV <- c("waaJ, rfaJ","wbyK","SEPT4") #Orange colour

osmoReg <- c("proX","proW","ompF") #Purple colour

riboAndTransl <- c("RP-L10, MRPL10, rplJ","RP-L14e, RPL14","RP-L15e, RPL15","RP-L24, MRPL24, rplX","RP-L3, MRPL3, rplC","RP-L5, MRPL5, rplE","RP-L7, MRPL12, rplL","RP-S10, MRPS10, rpsJ","RP-S12, MRPS12, rpsL","RP-S15, MRPS15, rpsO","RP-S2, MRPS2, rpsB","RP-S7, MRPS7, rpsG","EIF1A","EIF4A","EIF4E","EIF5") # Blue colour

ViralDef <- c("hsdR")

ATPSynthase <- c("ATPeF0C, ATP5G, ATP9","ATPeF0A, MTATP6, ATP6","ATPF0A, atpB","ATPF0B, atpF")

Motility <- c("fliD","fliC, hag")

MacroMoc <- c("phaC, phbC")


Oxido <- c("katG","fpr","qor, CRYZ")

shapeVec <- c(0, 1, 2, 4, 5, 6, 15, 16, 17, 18)

edgeR_KO %>%
  mutate(weighted = logFC*logCPM) %>%
  inner_join(rbind(koDownLegend, koUpLegend), by = "KEGG_ko") %>% #Adding known annotations
  arrange(desc(weighted)) %>%
  #slice(1:50, (nrow(.)-49):nrow(.)) %>% #selecting largest and lowest weighted values respectively
  ungroup() %>%
  mutate(gene = forcats::as_factor(gene) %>% fct_reorder(logFC, .desc = TRUE)) %>%
  mutate(process = case_when(
    gene %in% aggregationGenes ~ "Aggregation & cell-cell connections",
    gene %in% LPSOMV ~ "Membrane vesicles",
    gene %in% osmoReg ~ "Osmoregulation",
    gene %in% riboAndTransl ~ "Ribosome and translation",
    gene %in% ViralDef ~ "Viral defense",
    gene %in% ATPSynthase ~ "ATP synthase",
    gene %in% Motility ~ "Motility",
    gene %in% MacroMoc ~ "Macromolecular turnover",
    gene %in% Oxido ~ "Oxidoreductase",
    TRUE ~ "None"
  )) %>% 
  filter(process != "None") %>%
  ggplot(mapping = aes(y = gene, x= logFC, shape = process)) +
  geom_point(aes(size = logCPM, colour = fdr)) +
  scale_colour_viridis(discrete = FALSE) +
  theme_minimal()  +
  scale_shape_manual('Process', values = shapeVec)

ggsave("../results/manualCats.pdf", bg = "white")

ggsave("../results/manualCats.tiff",dpi = 330, bg = "white")
```


To see large-scale patterns, the [COG-categories](https://www.ncbi.nlm.nih.gov/research/cog#) were plotted to understand responses better (@fig-cogCats), the B-panel shoes the taxonomic contribution of all the statistically differentially abundant genes. The tpm values were average across samples and fraction to identify taxonomic fidelity of the functional categories. The taxonomic contribution overall showed a lot of taxa annotated only as bacteria, and a stronger presence of Archaea in the C-Treatment-enriched genes. The categories which show responses in the C-treatment are:\
Translation, ribosomal structure and biogenesis\
Energy production and conversion\
RNA processing and modification\


```{r}
#| label: fig-cogCats
#| fig-cap: "The abundance and change of the genes involved in relevant processes.Dowen denotes genes significantly abundant in the C-treatment, uo denotes genes significanly more abundant in the TN-treatment."
#| fig-subcap: 
#|   - "tpm contribution of the DE-genes in each treatment and statistical group, per COG-category"
#|   - "Taxonomic contribution to each category"
#| warning: false
#| layout-ncol: 1


#Create ordering of tpm based on abundance

SelCats <- c(cog_legend$full_name[1], cog_legend$full_name[17], cog_legend$full_name[2], cog_legend$full_name[9], cog_legend$full_name[10], cog_legend$full_name[14], cog_legend$full_name[18], cog_legend$full_name[19])

#Start with large scale categories
bbmap_p %>%
  inner_join(sample_ID %>% filter(day == "17"), by = "sample") %>% # Selecting relevant day
  filter(treatment %in% c("TN","C")) %>% # Selecting relevant treatments
  group_by(orf, treatment) %>%
  summarise(tpm = mean(tpm)) %>% # summarising mean tpm per treatment
  ungroup() %>%
  mutate(type = case_when(orf %in% upReg ~ "TN-DE", #Mutating in up/downregulation information
                          orf %in% downReg ~ "C-DE",
                          TRUE ~ "non-DE")) %>%
  inner_join(eggnogs, by = "orf") %>%
  separate_rows(COG_category, sep = '(?<=.)(?=.)') %>% #Dealing with multiple category assignments
  group_by(treatment, type, COG_category) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  filter(COG_category != "-") %>%
  #mutate(COG_category = forcats::as_factor(COG_category) %>% fct_reorder(tpm, .desc = FALSE)) %>%
  inner_join(cog_legend, by = "COG_category") %>%
 #mutate(full_name = forcats::as_factor(full_name) %>% fct_reorder(tpm, .desc = FALSE)) %>%
  filter(full_name %in% SelCats) %>%
  ggplot(mapping = aes(x = fct_relevel(full_name, rev(SelCats)), y = tpm, fill = type)) +
  geom_col() +
  theme_minimal() +
  scale_y_continuous(labels = scales::comma) +
  ylab("Transcripts per million") +
  theme(legend.title = element_text(face = "bold")) +
  scale_fill_manual('Type', values = c("C-DE" = TREAT_COLOURS[1],"TN-DE" = TREAT_COLOURS[2], "non-DE" = "grey68")) +
  xlab("COG category") +
  coord_flip() +
  facet_wrap(~ treatment)

ggsave("../results/COG_cats.pdf", bg = "white", width = 18, height = 12, unit = "cm")
ggsave("../results/COG_cats.tiff", bg = "white", width = 18, height = 12, units = "cm", 
       dpi = 330)
  

  #Taxonomic contribution of COG-categories
    #Deciding the top 10 taxonomies

top10 <- bbmap_p %>%
  inner_join(sample_ID %>% filter(day == "17"), by = "sample") %>% # Selecting relevant day
  filter(treatment %in% c("TN","C")) %>% # Selecting relevant treatments
  group_by(orf) %>%
  summarise(tpm = mean(tpm)) %>% # summarising mean tpm per treatment
  ungroup() %>%
  mutate(type = case_when(orf %in% upReg ~ "TN-DE", #Mutating in up/downregulation information
                          orf %in% downReg ~ "C-DE",
                          TRUE ~ "non-DE")) %>%
  inner_join(eggnogs, by = "orf") %>%
  separate_rows(COG_category, sep = '(?<=.)(?=.)') %>%
  filter(COG_category != "-") %>%
  inner_join(cog_legend, by = "COG_category") %>%
  filter(full_name %in% SelCats) %>%
  inner_join(bbmap_p %>% distinct(orf, chr), by = "orf") %>% #Getting contig for taxonomy annotation
  inner_join(taxonomy %>% filter(superkingdom %in% c("Bacteria", "Archaea")), by = "chr") %>%
  mutate(class = na_if(class, "no support"),
         phylum = na_if(phylum, "no support")) %>%
  mutate(taxa_group = coalesce(class, phylum, superkingdom))  %>%
  group_by(taxa_group) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  arrange(desc(tpm)) %>%
  slice(1:10) %>%
  pull(taxa_group)

#Fix the order of categories to match the above plot 

levelVec <- bbmap_p %>%
  inner_join(sample_ID %>% filter(day == "17"), by = "sample") %>% # Selecting relevant day
  filter(treatment %in% c("TN","C")) %>% # Selecting relevant treatments
  group_by(orf, treatment) %>%
  summarise(tpm = mean(tpm)) %>% # summarising mean tpm per treatment
  ungroup() %>%
  mutate(type = case_when(orf %in% upReg ~ "TN-DE", #Mutating in up/downregulation information
                          orf %in% downReg ~ "C-DE",
                          TRUE ~ "non-DE")) %>%
  inner_join(eggnogs, by = "orf") %>%
  separate_rows(COG_category, sep = '(?<=.)(?=.)') %>%
  group_by(treatment, type, COG_category) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  filter(COG_category != "-") %>%
  mutate(COG_category = forcats::as_factor(COG_category) %>% fct_reorder(tpm, .desc = FALSE)) %>%
  pull(COG_category) %>%
  levels()

# Adding taxonomy to plot in each category and DE-fraction #mutate in the prefix for each taxonomic level.
bbmap_p %>%
  inner_join(sample_ID %>% filter(day == "17"), by = "sample") %>% # Selecting relevant day
  filter(treatment %in% c("TN","C")) %>% # Selecting relevant treatments
  group_by(orf) %>% #mean tpm regardless of treatment
  summarise(tpm = mean(tpm)) %>% # summarising mean tpm per treatment
  ungroup() %>%
  mutate(type = case_when(orf %in% upReg ~ "TN-DE", #Mutating in up/downregulation information
                          orf %in% downReg ~ "C-DE",
                          TRUE ~ "non-DE")) %>%
  inner_join(eggnogs, by = "orf") %>%
  separate_rows(COG_category, sep = '(?<=.)(?=.)') %>%
  inner_join(bbmap_p %>% distinct(orf, chr), by = "orf") %>% #Getting contig for taxonomy annotation
  inner_join(taxonomy %>% filter(superkingdom %in% c("Bacteria", "Archaea")), by = "chr") %>%
  mutate(class = na_if(class, "no support"),
         phylum = na_if(phylum, "no support")) %>% #Replacing the no support wth NA
  mutate(taxa_group = coalesce(class, phylum, superkingdom))  %>%
  mutate(taxa_group = ifelse(taxa_group %in% top10, paste0(taxa_group), paste0("Other"))) %>%
  mutate(taxa_group = case_when(taxa_group == superkingdom ~ paste0("d_",taxa_group),
                                 taxa_group == phylum ~ paste0("p_",taxa_group),
                                 taxa_group == class ~ paste0("c_", taxa_group),
                                 TRUE ~ paste0(taxa_group))) %>% 
  group_by(type, COG_category, taxa_group) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  filter(COG_category != "-") %>%
  mutate(COG_category = factor(COG_category, levels = levelVec)) %>%
  group_by(type, COG_category) %>%
  mutate(relab = tpm/sum(tpm)) %>%
  ungroup() %>%
  inner_join(cog_legend, by = "COG_category") %>%
  filter(full_name %in% SelCats) %>%
  ggplot(mapping = aes(x = fct_relevel(full_name, rev(SelCats)), y = relab, fill = fct_relevel(taxa_group, "Other", after = Inf))) +
  geom_col() +
  theme_minimal() +
  xlab("COG category") +
  ylab("Relative abundance") +
  theme(legend.position = "bottom", axis.text = element_text(size = 7),
        legend.title = element_text(face = "bold")) +
  coord_flip() +
  facet_grid(~ type) +
  guides(fill=guide_legend(ncol=2, title.position = "top")) +
  scale_fill_manual('Taxonomic group', values = GEOM_COL_COLOURS) +
  scale_y_continuous(labels=c(0,0.25,0.50,0.75,1))

ggsave("../results/COG_cats_taxonomy.tiff", bg = "white", width = 18, height = 12, units = "cm", dpi = 330)
```

